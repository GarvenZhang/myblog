{"version":3,"sources":["webpack:///./client/Admin/components/Form/index.css","webpack:///./client/Admin/components/Form/index.jsx","webpack:///./client/Admin/containers/Chatroom/index.css","webpack:///./client/Admin/containers/Chatroom/index.jsx","webpack:///./node_modules/babel-runtime/core-js/json/stringify.js","webpack:///./node_modules/babel-runtime/node_modules/core-js/library/fn/json/stringify.js"],"names":["isDev","SecondaryPasswordLogin","props","src","dev","fileServerIP","prod","fileServerDomain","parentSrc","cmsPort","cmsDomain","msgHandle","bind","e","origin","$iframe","iframe","msg","account","access_token","onload","contentWindow","postMessage","window","addEventListener","removeEventListener","defaultProps","propTypes","string","isRequired","ChatroomLogin","toSrc","toDomain","name","csrf_token","required","AdminChatroom"],"mappings":"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","file":"chatroom.js","sourcesContent":["// removed by extract-text-webpack-plugin\nmodule.exports = {\"secondary-password-login-wrap\":\"secondary-password-login-wrap_3LArj\"};","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport config from '../../../../config'\n\nimport style from './index.css'\n\nconst isDev = process.env.NODE_ENV === 'development'\n\nexport class SecondaryPasswordLogin extends Component {\n  constructor (props) {\n    super(props)\n\n    this.src = isDev ? `${config.dev.fileServerIP}/secret-login.html` : `${config.prod.fileServerDomain}/secret-login.html`\n    this.parentSrc = isDev ? `http://localhost:${config.cmsPort}` : config.prod.cmsDomain\n\n    this.msgHandle = this.msgHandle.bind(this)\n  }\n\n  static defaultProps = {\n    account: '',\n    access_token: ''\n  }\n\n  msgHandle (e) {\n    if (e.origin === config.dev.fileServerIP) {\n\n    }\n  }\n\n  render () {\n\n    return (\n      <iframe\n        ref={iframe => this.$iframe = iframe}\n        className={style['secondary-password-login-wrap']}\n        src={this.src}>\n\n      </iframe>\n    )\n  }\n\n  componentDidMount () {\n\n    const msg = {\n      account: this.props.account,\n      access_token: this.props.access_token,\n      parentSrc: this.parentSrc\n    }\n\n    const src = this.src\n\n    this.$iframe.onload = function () {\n      this.contentWindow.postMessage(msg, src)\n    }\n\n    window.addEventListener('message', this.msgHandle, false)\n\n  }\n\n  componentWillUnmount () {\n\n    window.removeEventListener('message', this.msgHandle, false)\n\n  }\n\n}\n\nif (process.env.NODE_ENV === 'development') {\n  SecondaryPasswordLogin.propTypes = {\n    account: PropTypes.string.isRequired,\n    access_token: PropTypes.string.isRequired\n  }\n}\n\nexport class ChatroomLogin extends Component {\n  constructor (props) {\n    super(props)\n\n    this.toSrc = isDev ? `http://localhost:3001/chatroom-login.html` : `${config.prod.fileServerDomain}/chatroom-login.html`\n    this.toDomain = isDev ? 'http://localhost:3001' : config.prod.fileServerDomain\n  }\n\n  static defaultProps = {\n    csrf_token: ''\n  }\n\n  render () {\n\n    return (\n      <iframe\n        className=\"chatroom-wrap\"\n        ref={iframe => this.$iframe = iframe}\n        src='/'\n      >\n      </iframe>\n    )\n  }\n\n  componentDidMount () {\n    \n    // === iframe + window.name: 在一个窗口(window)的生命周期内,窗口载入的所有的页面都是共享一个window.name === //\n    // === 1 实现: 当前页面下放个同域的iframe, iframe中将页面的数据以string类型存储在window.name, 然后改变src到不同域的页面, 读取window.name === //\n\n    this.$iframe.contentWindow.name = JSON.stringify({\n      csrf_token: this.props.csrf_token\n    })\n\n    this.$iframe.src = this.toSrc\n  }\n}\n\nChatroomLogin.propTypes = {\n  csrf_token: PropTypes.string.required\n}\n","// removed by extract-text-webpack-plugin","import React, { Component } from 'react'\n\nimport { ChatroomLogin } from '../../components/Form'\n\nimport './index.css'\n\nclass AdminChatroom extends Component {\n  constructor (props) {\n    super(props)\n  }\n\n  render () {\n    return (\n      <div className='admin-chatroom-wrap admin-inner'>\n        <ChatroomLogin />\n      </div>\n    )\n  }\n}\n\nexport default AdminChatroom\n","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n"],"sourceRoot":""}