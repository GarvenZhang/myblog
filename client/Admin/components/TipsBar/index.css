.tipsbar-wrap {
  position:  fixed;
  top:  0;
  left: 0;
  width: 100%;
  text-align: center;
  border-bottom: 10px solid #000;
  border-top: 10px solid #000;
  background-color: #000;
}
.life-info-wrap,
.tips-wrap,
.link-list {
  display: inline-block;
  width: 25%;
}
.date,
.location,
.weather {
  margin: 0 7px;
}
.tips-wrap {
  position: relative;
  width: 50%;

  /*

  // === vertical-align 与 line-height的关系: === //
  // === 1 vertical-align的百分比值 是相对于 line-height 来计算的, 而 line-height 则是相对于 font-size 来计算的 === //
  // === 2 假如: <div><img src='xxx.png'/><span>xx</span></div> === //
  // === 2.1 现象: 则图片与文字并排, 且图片底部距离div下边框有一段距离, 放大之后会发现图片会对齐xx文字 === //
  // === 2.2 原因: vertical-align默认值为 baseline , 即基线对齐, 基线则是字母x的下边缘；而xx文字的高度由行高决定, 所以图片底部到div下边框的距离实际上是xx本身的高度造成的 === //
  // === 2.3 解决: === //
  // === > 让 vertical-align 失效; 图片默认是 inline 水平的, 而 vertical-align 对块状水平元素无感, 则可以改变图片的display/float/position === //
  // === > 使用其它 vertical-align 值: 如 bottom/middle/top === //
  // === > 直接修改 line-height === //

  // === inline-block元素设置overflow:hidden属性导致相邻行内元素向下偏移 === //
  // === 1 原因: 一个inline-block元素，如果里面没有inline内联元素，或者overflow不是visible，则该元素的基线就是其margin底边缘，否则，其基线就是元素里面最后一行内联元素的基线 === //

  */

  vertical-align: bottom;
  background-color: #304148;
  overflow: hidden;
}
.link-item {
  display: inline-block;
  width: 33.3%;
}
.tips {
  position: absolute;
  top: 0;

  /*

  // === float或absolute后宽度自适应: 当设置了 float 或者 absoolute, 则会脱离正常文档流, 若本来是 块级元素 , 则宽度100%继承父元素的特点已失效, 便变成自适应, 除非手动设置宽度 === //
  // === 1 p标签absolute后, 若 left 超出了父元素右边界 或者 right 超出了父元素左边界, 则会自动换行 === //
  // === 1.1 解决: === //
  // === > 手动设置 width === //
  // === > 显示设置不换行: white-space: nowrap; === //

  */

  white-space: nowrap;
  animation: leftMove linear 20s 0s infinite;
}
@keyframes leftMove {
  from {
    right: -430px;
  }
  to {
    right: 460px;
  }
}

.tips--0 {
  /*background-color: #3f7086;*/
}
.tips--1 {
  /*background-color: #2eac6d;*/
}
.tips--2 {
  /*background-color: yellow;*/
}
.theme {
  color: red;
  font-weight: 800;
}
.link {
  color: red;
  text-decoration: underline;
  cursor: pointer;
}
.link:hover {
  color: blue
}
